{
  "id": "5d38d46b-4c0a-4c14-8f0c-04df59e4dc27",
  "name": "releaseorchestrator",
  "friendlyName": "Release Orchestrator",
  "instanceNameFormat": "Release Orchestrator",
  "description": "Manage and orchestrate Azure DevOps release pipelines",
  "helpMarkDown": "For aditional information and support please refer to <https://github.com/dmitryserbin/azdev-release-orchestrator> project repository",
  "category": "Release",
  "author": "Dmitry Serbin",
  "deprecated": false,
  "preview": true,
  "version": {
    "Major": 3,
    "Minor": 0,
    "Patch": 0
  },
  "groups": [
    {
      "name": "Advanced",
      "displayName": "Advanced",
      "isExpanded": true
    }
  ],
  "inputs": [
    {
      "name": "endpointType",
      "type": "radio",
      "label": "Azure DevOps endpoint type",
      "helpMarkDown": "Select endpoint type to connect to Azure DevOps: \n- Integrated = default 'SystemVssConnection' service endpoint for 'Project Collection Build Service' user account\n- Service = user-defined personal access token (PAT) service endpoint",
      "required": true,
      "defaultValue": "integrated",
      "options": {
        "integrated": "Integrated endpoint",
        "service": "Service endpoint"
      }
    },
    {
      "name": "endpointName",
      "type": "connectedService:ExternalTfs",
      "label": "Service endpoint",
      "required": true,
      "helpMarkDown": "Select service endpoint for Azure DevOps connection",
      "visibleRule": "endpointType = service"
    },
    {
      "name": "projectName",
      "type": "pickList",
      "label": "Project name",
      "helpMarkDown": "Specify target project name or ID",
      "required": true,
      "properties": {
        "EditableOptions": true
      }
    },
    {
      "name": "definitionName",
      "type": "pickList",
      "label": "Definition name",
      "helpMarkDown": "Specify target build pipeline definition name or ID",
      "required": true,
      "properties": {
        "EditableOptions": true
      }
    },
    {
      "name": "strategy",
      "type": "radio",
      "label": "Run strategy",
      "helpMarkDown": "Select strategy to perform target run orchestration. Create new build, select latest or target specific build in the definition",
      "required": true,
      "defaultValue": "new",
      "options": {
        "new": "New run",
        "latest": "Latest run",
        "specific": "Specific run"
      }
    },
    {
      "name": "stages",
      "type": "string",
      "label": "Stages",
      "helpMarkDown": "Specify target definition or build stages (comma separated)",
      "required": false
    },
    {
      "name": "buildNumber",
      "type": "pickList",
      "label": "Build number",
      "helpMarkDown": "Specify target build number or build ID (shows last 25 builds)",
      "required": true,
      "properties": {
        "EditableOptions": true
      },
      "visibleRule": "strategy = specific"
    },
    {
      "name": "buildResult",
      "type": "pickList",
      "label": "Build result",
      "helpMarkDown": "Specify target build status filter. Options: succeeded, partiallySucceeded, notStarted, rejected & canceled",
      "properties": {
        "EditableOptions": true
      },
      "options": {
        "Succeeded": "Succeeded",
        "PartiallySucceeded": "Partially succeeded",
        "Failed": "Failed",
        "Canceled": "Canceled"
      },
      "required": false,
      "visibleRule": "strategy = latest"
    },
    {
      "name": "buildTags",
      "type": "string",
      "label": "Build tags",
      "helpMarkDown": "Specify target build tags (comma separated)",
      "required": false,
      "visibleRule": "strategy = latest"
    },
    {
      "name": "parameters",
      "type": "multiLine",
      "label": "Parameters",
      "helpMarkDown": "Override target pipeline parameters when creating a new run. In 'Name=Value' format, special characters supported, new line separated",
      "properties": {
        "rows": 8,
        "maxLength": 10000,
        "resizable": true
      },
      "required": false,
      "visibleRule": "strategy = new"
    },
    {
      "name": "ignoreFailure",
      "type": "boolean",
      "label": "Ignore progress failure",
      "helpMarkDown": "Suppress progress errors and set task result to partially succeeded in case of a failure. Default = false",
      "defaultValue": false,
      "required": false,
      "groupName": "Advanced"
    },
    {
      "name": "skipTracking",
      "type": "boolean",
      "label": "Skip progress tracking",
      "helpMarkDown": "Skip stage progress tracking. Default = false",
      "defaultValue": false,
      "required": false,
      "groupName": "Advanced"
    },
    {
      "name": "cancelFailedApproval",
      "type": "boolean",
      "label": "Cancel failed approval",
      "helpMarkDown": "Cancel build progress when stage approval or check fails. Default = false",
      "defaultValue": false,
      "required": false,
      "groupName": "Advanced"
    },
    {
      "name": "updateInterval",
      "type": "int",
      "label": "Update interval",
      "helpMarkDown": "Specify number of seconds to wait before next run progress update. Default = 5 (seconds)",
      "defaultValue": 5,
      "required": true,
      "validation": {
        "expression": "isInRange(value, 1, 300)",
        "message": "Update interval must be within 1 <=> 300 range"
      },
      "groupName": "Advanced"
    },
    {
      "name": "approvalInterval",
      "type": "int",
      "label": "Approval interval",
      "helpMarkDown": "Specify number of seconds to wait before next stage approval attempt. Default = 60 (seconds)",
      "defaultValue": 60,
      "required": true,
      "validation": {
        "expression": "isInRange(value, 1, 300)",
        "message": "Approval interval must be within 1 <=> 300 range"
      },
      "groupName": "Advanced"
    },
    {
      "name": "approvalAttempts",
      "type": "int",
      "label": "Approval attempts",
      "helpMarkDown": "Specify number of attempts to retry (with 1 minute delay) approving target stage progress (if unsuccessful) before failing. Default = 10 (times)",
      "defaultValue": 10,
      "required": true,
      "validation": {
        "expression": "isInRange(value, 0, 100)",
        "message": "Approval attempts must be within 0 <=> 100 range"
      },
      "groupName": "Advanced"
    }
  ],
  "dataSourceBindings": [
    {
      "target": "projectName",
      "endpointId": "tfs:teamfoundation",
      "endpointUrl": "{{endpoint.url}}/_apis/projects",
      "resultSelector": "jsonpath:$.value[?(@.state == 'wellFormed')]",
      "resultTemplate": "{ \"Value\" : \"{{{name}}}\", \"DisplayValue\" : \"{{{name}}}\" }"
    },
    {
      "target": "definitionName",
      "endpointId": "tfs:teamfoundation",
      "endpointUrl": "{{endpoint.url}}/$(projectName)/_apis/build/definitions",
      "resultSelector": "jsonpath:$.value[?(@.quality == 'definition')]",
      "resultTemplate": "{ \"Value\" : \"{{{id}}}\", \"DisplayValue\" : \"{{{name}}}\" }"
    },
    {
      "endpointId": "tfs:teamfoundation",
      "target": "buildNumber",
      "endpointUrl": "{{endpoint.url}}/$(projectName)/_apis/build/builds?definitions=$(definitionName)&$top=25",
      "resultSelector": "jsonpath:$.value[*]",
      "resultTemplate": "{ \"Value\" : \"{{{buildNumber}}}\", \"DisplayValue\" : \"{{{buildNumber}}} (by {{{requestedBy.displayName}}} at {{{lastChangedDate}}})\" }"
    }
  ],
  "execution": {
    "Node10": {
      "target": "task.js"
    }
  }
}
