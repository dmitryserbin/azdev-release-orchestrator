{
  "id": "5d38d46b-4c0a-4c14-8f0c-04df59e4dc27",
  "name": "releaseorchestrator",
  "friendlyName": "Release Orchestrator",
  "instanceNameFormat": "Release Orchestrator",
  "description": "Manage and orchestrate Azure DevOps release pipelines",
  "helpMarkDown": "For aditional information and support please refer to <https://github.com/dmitryserbin/azdev-release-orchestrator> project repository",
  "category": "Release",
  "author": "Dmitry Serbin",
  "deprecated": false,
  "preview": false,
  "version": {
    "Major": 3,
    "Minor": 0,
    "Patch": 0
  },
  "groups": [
    {
      "name": "Advanced",
      "displayName": "Advanced",
      "isExpanded": true
    }
  ],
  "inputs": [
    {
      "name": "endpointType",
      "type": "radio",
      "label": "Azure DevOps endpoint type",
      "helpMarkDown": "Select endpoint type to connect to Azure DevOps: \n- Integrated = default 'SystemVssConnection' service endpoint for 'Project Collection Build Service' user account; \n- Service = user-defined personal access token (PAT) service endpoint \n\nNote: requires 'View releases', 'View release definition', 'Create releases' and 'Manage deployments' target release pipeline permissions",
      "required": true,
      "defaultValue": "integrated",
      "options": {
        "integrated": "Integrated endpoint",
        "service": "Service endpoint"
      }
    },
    {
      "name": "endpointName",
      "type": "connectedService:ExternalTfs",
      "label": "Service endpoint",
      "required": true,
      "helpMarkDown": "Select service endpoint for Azure DevOps connection",
      "visibleRule": "endpointType = service"
    },
    {
      "name": "projectName",
      "type": "pickList",
      "label": "Project name",
      "helpMarkDown": "Specify target project name or ID",
      "required": true,
      "properties": {
        "EditableOptions": true
      }
    },
    {
      "name": "definitionName",
      "type": "pickList",
      "label": "Definition name",
      "helpMarkDown": "Specify target release definition name or ID",
      "required": true,
      "properties": {
        "EditableOptions": true
      }
    },
    {
      "name": "releaseStrategy",
      "type": "radio",
      "label": "Release strategy",
      "helpMarkDown": "Select release strategy to perform target release deployment. Create new release, target specific or latest release in the release definition",
      "required": true,
      "defaultValue": "create",
      "options": {
        "create": "Create release",
        "latest": "Latest release",
        "specific": "Specific release"
      }
    },
    {
      "name": "releaseName",
      "type": "pickList",
      "label": "Release name",
      "helpMarkDown": "Specify target release name or ID (shows last 25 releases)",
      "required": true,
      "properties": {
        "EditableOptions": true
      },
      "visibleRule": "releaseStrategy = specific"
    },
    {
      "name": "releaseStage",
      "type": "pickList",
      "label": "Release stage",
      "helpMarkDown": "Specify target release stage filter (comma separated)",
      "required": false,
      "properties": {
        "EditableOptions": true
      },
      "visibleRule": "releaseStrategy != create"
    },
    {
      "name": "definitionStage",
      "type": "pickList",
      "label": "Definition stage",
      "helpMarkDown": "Specify target release definition stage filter (comma separated)",
      "required": false,
      "properties": {
        "EditableOptions": true
      },
      "visibleRule": "releaseStrategy = create"
    },
    {
      "name": "releaseTag",
      "type": "string",
      "label": "Release tag",
      "helpMarkDown": "Specify target release tag filter (comma separated, last 100 releases)",
      "required": false,
      "visibleRule": "releaseStrategy = latest"
    },
    {
      "name": "artifactVersion",
      "type": "string",
      "label": "Artifact version",
      "helpMarkDown": "Specify target release primary build type artifact version filter (i.e. build number, last 100 builds)",
      "required": false,
      "visibleRule": "releaseStrategy != specific"
    },
    {
      "name": "artifactTag",
      "type": "string",
      "label": "Artifact tag",
      "helpMarkDown": "Specify target release primary build type artifact tag filter (comma separated, last 100 builds)",
      "required": false,
      "visibleRule": "releaseStrategy != specific"
    },
    {
      "name": "sourceBranch",
      "type": "string",
      "label": "Source branch",
      "helpMarkDown": "Specify target release source branch filter. Example = 'refs/heads/master' (build artifact, last 100 builds) or 'master' (Git artifact)",
      "required": false,
      "visibleRule": "releaseStrategy != specific"
    },
    {
      "name": "stageStatus",
      "type": "pickList",
      "label": "Target stage status",
      "helpMarkDown": "Specify target release stage status filter (comma separated). Options: succeeded, partiallySucceeded, notStarted, rejected & canceled",
      "properties": {
        "MultiSelectFlatList": true,
        "EditableOptions": false
      },
      "options": {
        "succeeded": "Succeeded",
        "partiallySucceeded": "Partially succeeded",
        "notStarted": "Not started",
        "rejected": "Rejected",
        "canceled": "Canceled"
      },
      "required": false,
      "visibleRule": "releaseStrategy = latest"
    },
    {
      "name": "releaseVariables",
      "type": "multiLine",
      "label": "Release variables",
      "helpMarkDown": "Override target release pipeline variables when creating a new release. Specified release variables must be configured to be 'settable at release time'. In 'Name=Value' format, special characters supported, new line separated",
      "properties": {
        "rows": 8,
        "maxLength": 10000,
        "resizable": true
      },
      "required": false,
      "visibleRule": "releaseStrategy = create"
    },
    {
      "name": "ignoreFailure",
      "type": "boolean",
      "label": "Ignore failures",
      "helpMarkDown": "Suppress errors and set task result to partially succeeded in case of a failure. Default = false",
      "defaultValue": false,
      "required": false,
      "groupName": "Advanced"
    },
    {
      "name": "approvalRetry",
      "type": "int",
      "label": "Approval retries",
      "helpMarkDown": "Specify number of attempts to retry (with 1 minute delay) approving target release stage deployment (if unsuccessful) before failing. Default = 60 (times)",
      "defaultValue": 60,
      "required": true,
      "validation": {
        "expression": "isInRange(value, 0, 100)",
        "message": "Approval retries must be within 0 <=> 100 range"
      },
      "groupName": "Advanced"
    },
    {
      "name": "updateInterval",
      "type": "int",
      "label": "Update interval",
      "helpMarkDown": "Specify number of seconds to wait before next release deployment progress update. Default = 5 (seconds)",
      "defaultValue": 5,
      "required": true,
      "validation": {
        "expression": "isInRange(value, 1, 300)",
        "message": "Update interval must be within 1 <=> 300 range"
      },
      "groupName": "Advanced"
    }
  ],
  "dataSourceBindings": [
    {
      "target": "projectName",
      "endpointId": "tfs:teamfoundation",
      "endpointUrl": "{{endpoint.url}}/_apis/projects",
      "resultSelector": "jsonpath:$.value[?(@.state == 'wellFormed')]",
      "resultTemplate": "{ \"Value\" : \"{{{name}}}\", \"DisplayValue\" : \"{{{name}}}\" }"
    },
    {
      "target": "definitionName",
      "endpointId": "tfs:rm",
      "endpointUrl": "{{endpoint.url}}/$(projectName)/_apis/release/definitions",
      "resultSelector": "jsonpath:$.value[?(@.isDeleted == false)]",
      "resultTemplate": "{ \"Value\" : \"{{{name}}}\", \"DisplayValue\" : \"{{{name}}}\" }"
    },
    {
      "target": "definitionStage",
      "endpointId": "tfs:rm",
      "endpointUrl": "{{endpoint.url}}/$(projectName)/_apis/release/definitions/?searchText=$(definitionName)&isExactNameMatch=true&$expand=Environments",
      "resultSelector": "jsonpath:$.value[*].environments[*]",
      "resultTemplate": "{ \"Value\" : \"{{{name}}}\", \"DisplayValue\" : \"{{{name}}}\" }"
    },
    {
      "target": "releaseName",
      "endpointId": "tfs:rm",
      "endpointUrl": "{{endpoint.url}}/$(projectName)/_apis/release/releases?definitionId=$(definitionName)&$top=25",
      "resultSelector": "jsonpath:$.value[*]",
      "resultTemplate": "{ \"Value\" : \"{{{name}}}\", \"DisplayValue\" : \"{{{name}}} (by {{{createdBy.displayName}}} at {{{createdOn}}})\" }"
    },
    {
      "target": "releaseStage",
      "endpointId": "tfs:rm",
      "endpointUrl": "{{endpoint.url}}/$(projectName)/_apis/release/releases?definitionId=$(definitionName)&searchText=$(releaseName)&$expand=Environments",
      "resultSelector": "jsonpath:$.value[*].environments[*]",
      "resultTemplate": "{ \"Value\" : \"{{{name}}}\", \"DisplayValue\" : \"{{{name}}}\" }"
    }
  ],
  "execution": {
    "Node10": {
      "target": "task.js"
    }
  }
}
