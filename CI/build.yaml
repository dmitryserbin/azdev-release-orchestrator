trigger: none


jobs:
- job: OrchestratorV1
  pool:
    vmImage: windows-latest
  steps:
  - task: Npm@1
    displayName: Restore packages
    inputs:
      workingDir: OrchestratorV1

  - task: Npm@1
    displayName: Run build
    inputs:
      command: custom
      workingDir: OrchestratorV1
      customCommand: run build

  - task: Npm@1
    displayName: Run tests
    inputs:
      command: custom
      workingDir: OrchestratorV1
      customCommand: run test

  - task: Npm@1
    displayName: Run clean
    inputs:
      command: custom
      workingDir: OrchestratorV1
      customCommand: run clean

  - task: PublishTestResults@2
    displayName: Publish test results
    inputs:
      testResultsFiles: "**/results.xml"

  - task: PublishBuildArtifacts@1
    displayName: Publish task
    inputs:
      pathToPublish: OrchestratorV1
      artifactName: OrchestratorV1

- job: OrchestratorV2
  pool:
    vmImage: windows-latest
  steps:
  - task: Npm@1
    displayName: Restore packages
    inputs:
      workingDir: OrchestratorV2

  - task: Npm@1
    displayName: Run lint
    inputs:
      command: custom
      workingDir: OrchestratorV2
      customCommand: run lint

  - task: Npm@1
    displayName: Run build
    inputs:
      command: custom
      workingDir: OrchestratorV2
      customCommand: run build

  - task: Npm@1
    displayName: Run tests
    inputs:
      command: custom
      workingDir: OrchestratorV2
      customCommand: run test

  - task: Npm@1
    displayName: Run clean
    inputs:
      command: custom
      workingDir: OrchestratorV2
      customCommand: run clean

  - task: PublishTestResults@2
    displayName: Publish test results
    inputs:
      testResultsFiles: "**/results.xml"

  - task: PublishBuildArtifacts@1
    displayName: Publish task
    inputs:
      pathToPublish: OrchestratorV2
      artifactName: OrchestratorV2

- job: Extension
  pool:
    vmImage: windows-latest
  steps:
  - task: CopyFiles@2
    displayName: Copy extension
    inputs:
      contents: |
        Images/**
        LICENSE
        *.md
        *.json
      targetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: DownloadBuildArtifacts@0
    displayName: Download tasks
    inputs:
      buildType: current
      downloadPath: '$(Build.ArtifactStagingDirectory)'

  - publish: $(Build.ArtifactStagingDirectory)
    displayName: Publish extension
    artifact: ReleaseOrchestrator
