{
  "id": "5d38d46b-4c0a-4c14-8f0c-04df59e4dc27",
  "name": "releaseorchestrator",
  "friendlyName": "Release Orchestrator",
  "instanceNameFormat": "Release Orchestrator",
  "description": "Manage and orchestrate Azure DevOps release pipelines",
  "helpMarkDown": "For aditional information and support please refer to <https://github.com/dmitryserbin/azdev-release-orchestrator> project repository.",
  "category": "Release",
  "author": "Dmitry Serbin",
  "preview": false,
  "version": {
    "Major": 1,
    "Minor": 0,
    "Patch": 1
  },
  "groups": [
    {
      "name": "Advanced",
      "displayName": "Advanced",
      "isExpanded": true
    }
  ],
  "inputs": [
    {
      "name": "EndpointType",
      "type": "radio",
      "label": "Azure DevOps Endpoint Type",
      "helpMarkDown": "Select endpoint type to connect Azure DevOps: \nIntegrated = default 'SystemVssConnection' service endpoint for 'Project Collection Build Service' user account; \nService = user-defined personal access token (PAT) service endpoint \n\nNote: requires 'View releases', 'View release definition', 'Create releases' and 'Manage deployments' release pipeline permissions",
      "required": true,
      "defaultValue": "integrated",
      "options": {
        "integrated": "Integrated Endpoint",
        "service": "Service Endpoint"
      }
    },
    {
      "name": "ConnectedService",
      "type": "connectedService:ExternalTfs",
      "label": "Service Endpoint",
      "required": true,
      "helpMarkDown": "Select service endpoint for Azure DevOps account",
      "visibleRule": "EndpointType = service"
    },
    {
      "name": "TargetProject",
      "type": "pickList",
      "label": "Project Name",
      "helpMarkDown": "Select target project name from the list or specify project ID",
      "required": true,
      "properties": {
        "EditableOptions": true
      }
    },
    {
      "name": "TargetDefinition",
      "type": "pickList",
      "label": "Release Definition",
      "helpMarkDown": "Select target release definition name or specify definition ID",
      "required": true,
      "properties": {
        "EditableOptions": true
      }
    },
    {
      "name": "ReleaseStrategy",
      "type": "radio",
      "label": "Release Strategy",
      "helpMarkDown": "Create new release, target existing or latest release in the release definition",
      "required": true,
      "defaultValue": "create",
      "options": {
        "create": "Create Release",
        "latest": "Latest Release",
        "specific": "Specific Release"
      }
    },
    {
      "name": "TargetRelease",
      "type": "pickList",
      "label": "Release Name",
      "helpMarkDown": "Select target release name (shows last 25 releases) or specify release ID",
      "required": true,
      "properties": {
        "EditableOptions": true
      },
      "visibleRule": "ReleaseStrategy = specific"
    },
    {
      "name": "TargetReleaseStages",
      "type": "pickList",
      "label": "Release Stages",
      "helpMarkDown": "Target specific release stages (comma separated)",
      "required": true,
      "properties": {
        "EditableOptions": true
      },
      "visibleRule": "ReleaseStrategy = specific || ReleaseStrategy = latest"
    },
    {
      "name": "DefinitionStagesFilter",
      "type": "boolean",
      "label": "Filter Definition Stages",
      "helpMarkDown": "Use default or target specific release definition stages",
      "defaultValue": false,
      "required": false,
      "visibleRule": "ReleaseStrategy = create"
    },
    {
      "name": "TargetDefinitionStages",
      "type": "pickList",
      "label": "Definition Stages",
      "helpMarkDown": "Target specific release definition stages (comma separated)",
      "required": true,
      "properties": {
        "EditableOptions": true
      },
      "visibleRule": "ReleaseStrategy = create && DefinitionStagesFilter = true"
    },
    {
      "name": "ReleaseTagFilter",
      "type": "boolean",
      "label": "Filter Release Tag",
      "helpMarkDown": "Enable target release filtering by tag name",
      "defaultValue": false,
      "required": false,
      "visibleRule": "ReleaseStrategy = latest"
    },
    {
      "name": "ReleaseTagName",
      "type": "string",
      "label": "Release Tag Name",
      "helpMarkDown": "Specify tag name filter of target release",
      "required": true,
      "visibleRule": "ReleaseTagFilter = true"
    },
    {
      "name": "ArtifactTagFilter",
      "type": "boolean",
      "label": "Filter Artifact Tag",
      "helpMarkDown": "Enable target release filtering by primary artifact tag name",
      "defaultValue": false,
      "required": false,
      "visibleRule": "ReleaseStrategy = create || ReleaseStrategy = latest"
    },
    {
      "name": "ArtifactTagName",
      "type": "string",
      "label": "Artifact Tag Name",
      "helpMarkDown": "Specify tag name filter of primary release artifact",
      "required": true,
      "visibleRule": "ArtifactTagFilter = true"
    },
    {
      "name": "SourceBranchFilter",
      "type": "boolean",
      "label": "Filter Source Branch",
      "helpMarkDown": "Enable target release filtering by primary artifact source branch name",
      "defaultValue": false,
      "required": false,
      "visibleRule": "ReleaseStrategy = create || ReleaseStrategy = latest"
    },
    {
      "name": "SourceBranchName",
      "type": "string",
      "label": "Source Branch Name",
      "helpMarkDown": "Specify branch name of primary release artifact source. Default = 'refs/heads/master' (build artifacts) or 'master' (Git artifacts)",
      "defaultValue": "refs/heads/master",
      "required": true,
      "visibleRule": "SourceBranchFilter = true"
    },
    {
      "name": "StageStatusFilter",
      "type": "boolean",
      "label": "Filter Stage Status",
      "helpMarkDown": "Enable target release filtering by stage(s) deployment status",
      "defaultValue": false,
      "required": false,
      "visibleRule": "ReleaseStrategy = latest"
    },
    {
      "name": "StageStatus",
      "type": "pickList",
      "label": "Target Stage Status",
      "helpMarkDown": "Specify target release stage status filter. Default = Succeeded",
      "defaultValue": "Succeeded",
      "properties": {
        "MultiSelectFlatList": true,
        "EditableOptions": false
      },
      "options": {
        "Succeeded": "Succeeded",
        "PartiallySucceeded": "Partially Succeeded",
        "NotStarted": "Not Started",
        "Rejected": "Rejected",
        "Canceled": "Canceled"
      },
      "required": true,
      "visibleRule": "StageStatusFilter = true"
    },
    {
      "name": "ReleaseVariables",
      "type": "multiLine",
      "label": "Release Variables",
      "helpMarkDown": "Override release variables of the target release pipeline when creating a new release. Specified release variables must be configured to be 'settable at release time'. In 'Name=Value' format, special characters supported, new line separated",
      "properties": {
        "rows": 8,
        "maxLength": 10000,
        "resizable": true
      },
      "required": false,
      "visibleRule": "ReleaseStrategy = create"
    },
    {
      "name": "IgnoreFailure",
      "type": "boolean",
      "label": "Ignore Failures",
      "helpMarkDown": "Suppress errors and set task result to partially succeeded in case of failure+ = false",
      "defaultValue": false,
      "required": false,
      "groupName": "Advanced"
    },
    {
      "name": "ApprovalRetry",
      "type": "string",
      "label": "Approval Retries",
      "helpMarkDown": "Specify number of attempts to retry (with 1 minute delay) approving target release stage deployment (if unsuccessful) before failing. Default = 60",
      "defaultValue": 60,
      "required": true,
      "groupName": "Advanced"
    },
    {
      "name": "UpdateInterval",
      "type": "string",
      "label": "Status Update Interval",
      "helpMarkDown": "Specify number seconds to wait before next release deployment status update. Default = 5 (i.e. every 'X' seconds)",
      "defaultValue": 5,
      "required": true,
      "groupName": "Advanced"
    }
  ],
  "dataSourceBindings": [
    {
      "target": "TargetProject",
      "endpointId": "tfs:teamfoundation",
      "endpointUrl": "{{endpoint.url}}/_apis/projects",
      "resultSelector": "jsonpath:$.value[?(@.state == 'wellFormed')]",
      "resultTemplate": "{ \"Value\" : \"{{{id}}}\", \"DisplayValue\" : \"{{{name}}}\" }"
    },
    {
      "target": "TargetDefinition",
      "endpointId": "tfs:rm",
      "endpointUrl": "{{endpoint.url}}/$(TargetProject)/_apis/release/definitions",
      "resultSelector": "jsonpath:$.value[?(@.isDeleted == false)]",
      "resultTemplate": "{ \"Value\" : \"{{{id}}}\", \"DisplayValue\" : \"{{{name}}}\" }"
    },
    {
      "target": "TargetDefinitionStages",
      "endpointId": "tfs:rm",
      "endpointUrl": "{{endpoint.url}}/$(TargetProject)/_apis/release/definitions/$(TargetDefinition)",
      "resultSelector": "jsonpath:$.environments[*]",
      "resultTemplate": "{ \"Value\" : \"{{{name}}}\", \"DisplayValue\" : \"{{{name}}}\" }"
    },
    {
      "target": "TargetRelease",
      "endpointId": "tfs:rm",
      "endpointUrl": "{{endpoint.url}}/$(TargetProject)/_apis/release/releases?definitionId=$(TargetDefinition)&$top=25",
      "resultSelector": "jsonpath:$.value[*]",
      "resultTemplate": "{ \"Value\" : \"{{{id}}}\", \"DisplayValue\" : \"{{{name}}} (by {{{createdBy.displayName}}} at {{{createdOn}}})\" }"
    },
    {
      "target": "TargetReleaseStages",
      "endpointId": "tfs:rm",
      "endpointUrl": "{{endpoint.url}}/$(TargetProject)/_apis/release/releases/$(TargetRelease)",
      "resultSelector": "jsonpath:$.environments[*]",
      "resultTemplate": "{ \"Value\" : \"{{{name}}}\", \"DisplayValue\" : \"{{{name}}}\" }"
    }
  ],
  "execution": {
    "Node10": {
      "target": "task.js"
    }
  }
}
