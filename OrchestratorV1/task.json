{
  "id": "5d38d46b-4c0a-4c14-8f0c-04df59e4dc27",
  "name": "releaseorchestrator",
  "friendlyName": "Release Orchestrator",
  "instanceNameFormat": "Release Orchestrator",
  "description": "Manage and orchestrate Azure DevOps release pipelines",
  "helpMarkDown": "This version of the task is deprecated, please update to the latest version. For aditional information and support please refer to <https://github.com/dmitryserbin/azdev-release-orchestrator> project repository",
  "category": "Release",
  "author": "Dmitry Serbin",
  "deprecated": true,
  "preview": false,
  "version": {
    "Major": 1,
    "Minor": 2,
    "Patch": 0
  },
  "groups": [
    {
      "name": "Advanced",
      "displayName": "Advanced",
      "isExpanded": true
    }
  ],
  "inputs": [
    {
      "name": "EndpointType",
      "type": "radio",
      "label": "Azure DevOps endpoint type",
      "helpMarkDown": "Select endpoint type to connect Azure DevOps: \nIntegrated = default 'SystemVssConnection' service endpoint for 'Project Collection Build Service' user account; \nService = user-defined personal access token (PAT) service endpoint \n\nNote: requires 'View releases', 'View release definition', 'Create releases' and 'Manage deployments' release pipeline permissions",
      "required": true,
      "defaultValue": "integrated",
      "options": {
        "integrated": "Integrated endpoint",
        "service": "Service endpoint"
      }
    },
    {
      "name": "ConnectedService",
      "type": "connectedService:ExternalTfs",
      "label": "Service endpoint",
      "required": true,
      "helpMarkDown": "Select service endpoint for Azure DevOps account",
      "visibleRule": "EndpointType = service"
    },
    {
      "name": "TargetProject",
      "type": "pickList",
      "label": "Project name",
      "helpMarkDown": "Select target project name from the list or specify project ID",
      "required": true,
      "properties": {
        "EditableOptions": true
      }
    },
    {
      "name": "TargetDefinition",
      "type": "pickList",
      "label": "Release definition",
      "helpMarkDown": "Select target release definition name or specify definition ID",
      "required": true,
      "properties": {
        "EditableOptions": true
      }
    },
    {
      "name": "ReleaseStrategy",
      "type": "radio",
      "label": "Release strategy",
      "helpMarkDown": "Create new release, target existing or latest release in the release definition",
      "required": true,
      "defaultValue": "create",
      "options": {
        "create": "Create release",
        "latest": "Latest release",
        "specific": "Specific release"
      }
    },
    {
      "name": "TargetRelease",
      "type": "pickList",
      "label": "Release name",
      "helpMarkDown": "Select target release (shows last 25 releases) or specify release ID",
      "required": true,
      "properties": {
        "EditableOptions": true
      },
      "visibleRule": "ReleaseStrategy = specific"
    },
    {
      "name": "TargetReleaseStages",
      "type": "pickList",
      "label": "Release stages",
      "helpMarkDown": "Target specific release stages (comma separated)",
      "required": true,
      "properties": {
        "EditableOptions": true
      },
      "visibleRule": "ReleaseStrategy = specific || ReleaseStrategy = latest"
    },
    {
      "name": "DefinitionStagesFilter",
      "type": "boolean",
      "label": "Filter definition stages",
      "helpMarkDown": "Use default or target specific release definition stages",
      "defaultValue": false,
      "required": false,
      "visibleRule": "ReleaseStrategy = create"
    },
    {
      "name": "TargetDefinitionStages",
      "type": "pickList",
      "label": "Definition stages",
      "helpMarkDown": "Target specific release definition stages (comma separated)",
      "required": true,
      "properties": {
        "EditableOptions": true
      },
      "visibleRule": "ReleaseStrategy = create && DefinitionStagesFilter = true"
    },
    {
      "name": "ReleaseTagFilter",
      "type": "boolean",
      "label": "Filter release tag",
      "helpMarkDown": "Enable target release filtering by tag name",
      "defaultValue": false,
      "required": false,
      "visibleRule": "ReleaseStrategy = latest"
    },
    {
      "name": "ReleaseTagName",
      "type": "string",
      "label": "Release tag name",
      "helpMarkDown": "Specify tag name filter of target release",
      "required": true,
      "visibleRule": "ReleaseTagFilter = true"
    },
    {
      "name": "ArtifactTagFilter",
      "type": "boolean",
      "label": "Filter artifact tag",
      "helpMarkDown": "Enable target release filtering by primary build artifact tag name",
      "defaultValue": false,
      "required": false,
      "visibleRule": "ReleaseStrategy = create || ReleaseStrategy = latest"
    },
    {
      "name": "ArtifactTagName",
      "type": "string",
      "label": "Artifact tag name",
      "helpMarkDown": "Specify tag name filter of primary release artifact",
      "required": true,
      "visibleRule": "ArtifactTagFilter = true"
    },
    {
      "name": "SourceBranchFilter",
      "type": "boolean",
      "label": "Filter source branch",
      "helpMarkDown": "Enable target release filtering by primary artifact source branch name",
      "defaultValue": false,
      "required": false,
      "visibleRule": "ReleaseStrategy = create || ReleaseStrategy = latest"
    },
    {
      "name": "SourceBranchName",
      "type": "string",
      "label": "Source branch name",
      "helpMarkDown": "Specify branch name of primary release artifact source. Default 'refs/heads/master' (build artifacts) or 'master' (Git artifacts)",
      "defaultValue": "refs/heads/master",
      "required": true,
      "visibleRule": "SourceBranchFilter = true"
    },
    {
      "name": "IgnoreFailure",
      "type": "boolean",
      "label": "Ignore failures",
      "helpMarkDown": "Suppress errors and set task result to partially succeeded in case of failure. Default = false",
      "defaultValue": false,
      "required": false,
      "groupName": "Advanced"
    }
  ],
  "dataSourceBindings": [
    {
      "target": "TargetProject",
      "endpointId": "tfs:teamfoundation",
      "endpointUrl": "{{endpoint.url}}/_apis/projects",
      "resultSelector": "jsonpath:$.value[?(@.state == 'wellFormed')]",
      "resultTemplate": "{ \"Value\" : \"{{{id}}}\", \"DisplayValue\" : \"{{{name}}}\" }"
    },
    {
      "target": "TargetDefinition",
      "endpointId": "tfs:rm",
      "endpointUrl": "{{endpoint.url}}/$(TargetProject)/_apis/release/definitions",
      "resultSelector": "jsonpath:$.value[?(@.isDeleted == false)]",
      "resultTemplate": "{ \"Value\" : \"{{{id}}}\", \"DisplayValue\" : \"{{{name}}}\" }"
    },
    {
      "target": "TargetDefinitionStages",
      "endpointId": "tfs:rm",
      "endpointUrl": "{{endpoint.url}}/$(TargetProject)/_apis/release/definitions/$(TargetDefinition)",
      "resultSelector": "jsonpath:$.environments[*]",
      "resultTemplate": "{ \"Value\" : \"{{{name}}}\", \"DisplayValue\" : \"{{{name}}}\" }"
    },
    {
      "target": "TargetRelease",
      "endpointId": "tfs:rm",
      "endpointUrl": "{{endpoint.url}}/$(TargetProject)/_apis/release/releases?definitionId=$(TargetDefinition)&$top=25",
      "resultSelector": "jsonpath:$.value[*]",
      "resultTemplate": "{ \"Value\" : \"{{{id}}}\", \"DisplayValue\" : \"{{{name}}} (by {{{createdBy.displayName}}} at {{{createdOn}}})\" }"
    },
    {
      "target": "TargetReleaseStages",
      "endpointId": "tfs:rm",
      "endpointUrl": "{{endpoint.url}}/$(TargetProject)/_apis/release/releases/$(TargetRelease)",
      "resultSelector": "jsonpath:$.environments[*]",
      "resultTemplate": "{ \"Value\" : \"{{{name}}}\", \"DisplayValue\" : \"{{{name}}}\" }"
    }
  ],
  "execution": {
    "Node": {
      "target": "index.js"
    }
  }
}
